{"ast":null,"code":"import { API_URL, GET_ENTRIES, SAVE_ENTRY } from \"./actionTypes\";\nimport axios from \"axios\";\nimport { authError, getUsers, loginSuccess, loginUser } from \"./user\";\nexport function saveEntry(newEntry) {\n  return {\n    type: SAVE_ENTRY,\n    entry: newEntry\n  };\n}\nexport function getEntries(entries) {\n  return {\n    type: GET_ENTRIES,\n    entries: entries\n  };\n}\nexport const entryFetch = entry => {\n  // const { setAuthTokens } = useAuth();\n  // const [isLoggedIn, setLoggedIn] = useState(false);\n  return dispatch => {\n    return fetch(`localhost:3000/entries/1`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: window.localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        entry\n      })\n    }).then(resp => resp.json()).then(data => {\n      console.log(data);\n\n      if (data.failure) {\n        dispatch(authError(data.failure));\n      } else {\n        localStorage.setItem(\"token\", data.jwt);\n        dispatch(getEntries(data.user));\n        dispatch(loginSuccess(data.success));\n      }\n    });\n  };\n};\nexport const axiosGetEntries = entries => {\n  return dispatch => {\n    axios.get(`${API_URL}/entries`, {\n      headers: {\n        Authorization: window.localStorage.getItem('token')\n      }\n    }).then(response => {\n      dispatch(getEntries(response.data));\n    }).catch(e => console.log(e));\n  };\n};","map":{"version":3,"sources":["/Users/tonyabraham/Development/code/Projects/covid-19-buddy/covid-19-buddy/fe/covid-19-buddy-fe/src/actions/entry.js"],"names":["API_URL","GET_ENTRIES","SAVE_ENTRY","axios","authError","getUsers","loginSuccess","loginUser","saveEntry","newEntry","type","entry","getEntries","entries","entryFetch","dispatch","fetch","method","headers","Accept","Authorization","window","localStorage","getItem","body","JSON","stringify","then","resp","json","data","console","log","failure","setItem","jwt","user","success","axiosGetEntries","get","response","catch","e"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,EAA8BC,UAA9B,QAA+C,eAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,YAA7B,EAA2CC,SAA3C,QAA2D,QAA3D;AAEA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAChC,SAAO;AAACC,IAAAA,IAAI,EAAER,UAAP;AAAmBS,IAAAA,KAAK,EAAEF;AAA1B,GAAP;AAEH;AACD,OAAO,SAASG,UAAT,CAAoBC,OAApB,EAA6B;AAChC,SAAO;AAAEH,IAAAA,IAAI,EAAET,WAAR;AAAqBY,IAAAA,OAAO,EAAEA;AAA9B,GAAP;AACH;AAED,OAAO,MAAMC,UAAU,GAAGH,KAAK,IAAI;AAC/B;AACA;AAEA,SAAOI,QAAQ,IAAI;AACf,WAAOC,KAAK,CAAE,0BAAF,EAA6B;AACrCC,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,MAAM,EAAE,kBAFH;AAGLC,QAAAA,aAAa,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B;AAHV,OAF4B;AAOrCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACf,QAAAA;AAAD,OAAf;AAP+B,KAA7B,CAAL,CASFgB,IATE,CASGC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATX,EAUFF,IAVE,CAUGG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,CAACG,OAAT,EAAkB;AACdlB,QAAAA,QAAQ,CAACX,SAAS,CAAC0B,IAAI,CAACG,OAAN,CAAV,CAAR;AAEH,OAHD,MAGO;AACHX,QAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,GAAnC;AACApB,QAAAA,QAAQ,CAACH,UAAU,CAACkB,IAAI,CAACM,IAAN,CAAX,CAAR;AACArB,QAAAA,QAAQ,CAACT,YAAY,CAACwB,IAAI,CAACO,OAAN,CAAb,CAAR;AACH;AACJ,KApBE,CAAP;AAsBH,GAvBD;AAyBH,CA7BM;AA8BP,OAAO,MAAMC,eAAe,GAAIzB,OAAD,IAAa;AACxC,SAAOE,QAAQ,IAAI;AACfZ,IAAAA,KAAK,CAACoC,GAAN,CAAW,GAAEvC,OAAQ,UAArB,EAA+B;AAACkB,MAAAA,OAAO,EAAgB;AAAGE,QAAAA,aAAa,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B;AAAlB;AAAxB,KAA/B,EAEKI,IAFL,CAEUa,QAAQ,IAAI;AACdzB,MAAAA,QAAQ,CAACH,UAAU,CAAC4B,QAAQ,CAACV,IAAV,CAAX,CAAR;AACH,KAJL,EAKKW,KALL,CAKWC,CAAC,IAAIX,OAAO,CAACC,GAAR,CAAYU,CAAZ,CALhB;AAMH,GAPD;AAQH,CATM","sourcesContent":["import {API_URL, GET_ENTRIES, SAVE_ENTRY} from \"./actionTypes\";\nimport axios from \"axios\";\nimport {authError, getUsers, loginSuccess, loginUser} from \"./user\";\n\nexport function saveEntry(newEntry) {\n    return {type: SAVE_ENTRY, entry: newEntry}\n\n}\nexport function getEntries(entries) {\n    return { type: GET_ENTRIES, entries: entries }\n}\n\nexport const entryFetch = entry => {\n    // const { setAuthTokens } = useAuth();\n    // const [isLoggedIn, setLoggedIn] = useState(false);\n\n    return dispatch => {\n        return fetch(`localhost:3000/entries/1`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n                Authorization: window.localStorage.getItem('token')\n            },\n            body: JSON.stringify({entry})\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                console.log(data)\n                if (data.failure) {\n                    dispatch(authError(data.failure))\n\n                } else {\n                    localStorage.setItem(\"token\", data.jwt)\n                    dispatch(getEntries(data.user))\n                    dispatch(loginSuccess(data.success))\n                }\n            })\n\n    }\n\n}\nexport const axiosGetEntries = (entries) => {\n    return dispatch => {\n        axios.get(`${API_URL}/entries`,{headers:               {  Authorization: window.localStorage.getItem('token')}\n        })\n            .then(response => {\n                dispatch(getEntries(response.data))\n            })\n            .catch(e => console.log(e))\n    }\n}"]},"metadata":{},"sourceType":"module"}