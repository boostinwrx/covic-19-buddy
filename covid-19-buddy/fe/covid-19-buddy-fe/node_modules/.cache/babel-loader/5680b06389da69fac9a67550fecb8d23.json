{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanyabraham/Development/code/Projects/covid-19-buddy/covid-19-buddy/fe/covid-19-buddy-fe/src/components/Login.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Alert, Form, Popover } from \"react-bootstrap\";\nimport { Button, MDBAlert } from \"mdbreact\";\nimport axios from 'axios';\nimport { clearMessage, userLoginFetch } from \"../actions/user\";\nimport { axiosGetEntries, entryFetch } from \"../actions/entry\"; // send JWT as a header in every request sent to the backend\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      success: ''\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.props.userLoginFetch(this.state);\n      setTimeout(() => {\n        this.props.history.push('/welcome') && this.props.clearMessage();\n      }, 4000); // this.props.dispatch({type: 'LOGIN', currentUser: {username: this.state.username, password: this.state.username}})    }\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.clearMessage();\n  }\n\n  componentDidMount() {\n    // this.props.axiosGetEntries()\n    this.props.axiosGetEntries();\n  }\n\n  //wire up mapDispatchToProps\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login main-container\",\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, this.props.error ? /*#__PURE__*/React.createElement(MDBAlert, {\n      id: \"success-alert\",\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, this.props.error) : '', this.props.success !== '' ? /*#__PURE__*/React.createElement(MDBAlert, {\n      id: \"success-alert\",\n      className: \"alert alert-success\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"You're Logged In! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 43\n      }\n    }), \"      \", this.props.success) : '', /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"login-header\",\n      className: \"header-raised\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \" Login\"), /*#__PURE__*/React.createElement(Form, {\n      id: \"login form\",\n      onSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      id: \"login form-group username\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      id: \"login form-label username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n      id: \"username\",\n      type: \"text\",\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      id: \"login form-group password\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      id: \"login form-label password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      id: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      id: \"login submit-btn\",\n      variant: \"primary\",\n      className: \"submitButton\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \" Submit \")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.users.error,\n    success: state.users.success\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    userLoginFetch: userInfo => {\n      dispatch(userLoginFetch(userInfo));\n    },\n    clearMessage: () => {\n      dispatch(clearMessage());\n    },\n    axiosGetEntries: entries => {\n      dispatch(axiosGetEntries(entries));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/tiffanyabraham/Development/code/Projects/covid-19-buddy/covid-19-buddy/fe/covid-19-buddy-fe/src/components/Login.js"],"names":["React","connect","Alert","Form","Popover","Button","MDBAlert","axios","clearMessage","userLoginFetch","axiosGetEntries","entryFetch","Login","Component","state","username","password","success","handleInputChange","event","setState","target","id","value","handleOnSubmit","preventDefault","props","setTimeout","history","push","componentWillUnmount","componentDidMount","render","error","mapStateToProps","users","mapDispatchToProps","dispatch","userInfo","entries"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Alert, Form, Popover} from \"react-bootstrap\";\nimport {Button, MDBAlert} from \"mdbreact\";\n\nimport axios from 'axios'\nimport {clearMessage, userLoginFetch} from \"../actions/user\";\nimport {axiosGetEntries, entryFetch} from \"../actions/entry\";\n// send JWT as a header in every request sent to the backend\n\n\nclass Login extends React.Component{\n    state = {\n        username: \"\",\n        password: \"\",\n        success: ''\n    }\n\ncomponentWillUnmount(){\n    this.props.clearMessage()\n\n}\ncomponentDidMount() {\n    // this.props.axiosGetEntries()\n    this.props.axiosGetEntries()\n\n\n}\n\n    handleInputChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        } );\n    }\n\n    handleOnSubmit = (event) => {\n        event.preventDefault();\n        this.props.userLoginFetch(this.state)\n\n         setTimeout(() => {this.props.history.push('/welcome') && this.props.clearMessage() }, 4000)\n\n\n        // this.props.dispatch({type: 'LOGIN', currentUser: {username: this.state.username, password: this.state.username}})    }\n    }\n    //wire up mapDispatchToProps\n    render() {\n        return(\n            <div id='login main-container' className='modal-body'>\n                { (this.props.error) ?\n                    <MDBAlert id='success-alert'className=\"alert alert-danger\" role=\"alert\">\n                        {this.props.error}\n                    </MDBAlert> : ''}\n\n                { (this.props.success !== '') ?\n                    <MDBAlert id='success-alert' className=\"alert alert-success\" role=\"alert\">\n                        You're Logged In! <br/>      {this.props.success}\n                    </MDBAlert> : ''}\n                {}\n\n\n\n                <h2 id='login-header' className='header-raised'> Login</h2>\n                <Form id='login form' onSubmit={this.handleOnSubmit}>\n\n\n                    <Form.Group id='login form-group username'onChange={this.handleInputChange} >\n                        <Form.Label id='login form-label username'>Username</Form.Label>\n                        <Form.Control id='username' type=\"text\" placeholder=\"Username\" />\n                    </Form.Group>\n\n\n                    <Form.Group id='login form-group password' onChange={this.handleInputChange} >\n                        <Form.Label id='login form-label password'>Password</Form.Label>\n                        <Form.Control id='password' type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n\n                    <Button id='login submit-btn' variant='primary' className='submitButton' type='submit'> Submit </Button>\n                </Form>\n            </div>\n\n\n        )\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.users.error,\n        success: state.users.success\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userLoginFetch: (userInfo) => {\n            dispatch(userLoginFetch(userInfo))\n        },\n        clearMessage: () => {dispatch(clearMessage())},\n        axiosGetEntries: (entries) => {\n            dispatch(axiosGetEntries(entries))\n        }\n\n    };\n}\n\nexport default connect(mapStateToProps ,mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}