{"ast":null,"code":"import { ADD_USER, GET_USERS, AUTHENTICATION_ERROR, LOGIN_AUTHENTICATED, AUTHENTICATED, SAVE_USER, SUCCESS_MESSAGE, CLEAR_MESSAGE } from \"../actions/actionTypes\";\nimport uuid from 'uuid';\nconst API_URL = 'https://localhost:3000/';\nexport default function manageUsers(state = {\n  users: [],\n  authenticated: false,\n  error: '',\n  success: '',\n  newUser: {\n    username: '',\n    password: '',\n    firstname: '',\n    lastname: '',\n    gender: '',\n    age: '',\n    profileimg: ''\n  }\n}, action) {\n  switch (action.type) {\n    case SAVE_USER:\n      return { ...state,\n        currentUser: action.user\n      };\n\n    case GET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case ADD_USER:\n      return { ...state,\n        users: [...state.users, action.newUser]\n      };\n\n    case AUTHENTICATED:\n      return { ...state,\n        error: '',\n        authenticated: true\n      };\n\n    case LOGIN_AUTHENTICATED:\n      return { ...state,\n        success: action.success,\n        error: '',\n        currentUser: action.currentUser.userInfo,\n        authenticated: true\n      };\n\n    case AUTHENTICATION_ERROR:\n      return { ...state,\n        error: action.error,\n        authenticated: false\n      };\n\n    case SUCCESS_MESSAGE:\n      return { ...state,\n        success: action.success\n      };\n\n    case CLEAR_MESSAGE:\n      return { ...state,\n        error: '',\n        success: ''\n      };\n\n    case 'GET_USERS_REQUEST':\n      console.log('getting users');\n\n    case 'GET_USERS_SUCCESS':\n      return { ...state,\n        users: action.users\n      };\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/Users/tiffanyabraham/Development/code/Projects/covid-19-buddy/covid-19-buddy/fe/covid-19-buddy-fe/src/reducers/userReducer.js"],"names":["ADD_USER","GET_USERS","AUTHENTICATION_ERROR","LOGIN_AUTHENTICATED","AUTHENTICATED","SAVE_USER","SUCCESS_MESSAGE","CLEAR_MESSAGE","uuid","API_URL","manageUsers","state","users","authenticated","error","success","newUser","username","password","firstname","lastname","gender","age","profileimg","action","type","currentUser","user","userInfo","console","log"],"mappings":"AAAA,SACIA,QADJ,EAEIC,SAFJ,EAGIC,oBAHJ,EAIIC,mBAJJ,EAKIC,aALJ,EAMIC,SANJ,EAOIC,eAPJ,EAQIC,aARJ,QASO,wBATP;AAUA,OAAOC,IAAP,MAAiB,MAAjB;AACA,MAAMC,OAAO,GAAE,yBAAf;AACA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAG;AACxCC,EAAAA,KAAK,EAAE,EADiC;AAExCC,EAAAA,aAAa,EAAE,KAFyB;AAGxCC,EAAAA,KAAK,EAAE,EAHiC;AAIxCC,EAAAA,OAAO,EAAE,EAJ+B;AAKxCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,SAAS,EAAE,EAHN;AAILC,IAAAA,QAAQ,EAAE,EAJL;AAKLC,IAAAA,MAAM,EAAE,EALH;AAMLC,IAAAA,GAAG,EAAE,EANA;AAOLC,IAAAA,UAAU,EAAE;AAPP;AAL+B,CAA7B,EAeZC,MAfY,EAeL;AACN,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKpB,SAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWe,QAAAA,WAAW,EAAEF,MAAM,CAACG;AAA/B,OAAP;;AACJ,SAAK1B,SAAL;AACI,aAAO,EAAC,GAAGU,KAAJ;AAAWC,QAAAA,KAAK,EAAEY,MAAM,CAACZ;AAAzB,OAAP;;AACJ,SAAKZ,QAAL;AAEI,aAAO,EAAC,GAAGW,KAAJ;AAAWC,QAAAA,KAAK,EAAE,CAAC,GAAGD,KAAK,CAACC,KAAV,EAAiBY,MAAM,CAACR,OAAxB;AAAlB,OAAP;;AAEJ,SAAKZ,aAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWG,QAAAA,KAAK,EAAE,EAAlB;AAAsBD,QAAAA,aAAa,EAAE;AAArC,OAAP;;AAEA,SAAKV,mBAAL;AACA,aAAO,EACH,GAAGQ,KADA;AACOI,QAAAA,OAAO,EAAES,MAAM,CAACT,OADvB;AACgCD,QAAAA,KAAK,EAAE,EADvC;AAC2CY,QAAAA,WAAW,EAAEF,MAAM,CAACE,WAAP,CAAmBE,QAD3E;AACsFf,QAAAA,aAAa,EAAE;AADrG,OAAP;;AAGJ,SAAKX,oBAAL;AACI,aAAO,EAAC,GAAGS,KAAJ;AAAUG,QAAAA,KAAK,EAAEU,MAAM,CAACV,KAAxB;AAA8BD,QAAAA,aAAa,EAAE;AAA7C,OAAP;;AACJ,SAAKP,eAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAWI,QAAAA,OAAO,EAAES,MAAM,CAACT;AAA3B,OAAP;;AACJ,SAAKR,aAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWG,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,OAAO,EAAE;AAA/B,OAAP;;AACJ,SAAK,mBAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACJ,SAAK,mBAAL;AACI,aAAQ,EAAC,GAAGnB,KAAJ;AAAYC,QAAAA,KAAK,EAAEY,MAAM,CAACZ;AAA1B,OAAR;;AACJ;AACI,aAAOD,KAAP;AA3BR;AA6BH;AAAA","sourcesContent":["import {\n    ADD_USER,\n    GET_USERS,\n    AUTHENTICATION_ERROR,\n    LOGIN_AUTHENTICATED,\n    AUTHENTICATED,\n    SAVE_USER,\n    SUCCESS_MESSAGE,\n    CLEAR_MESSAGE\n} from \"../actions/actionTypes\";\nimport uuid from 'uuid';\nconst API_URL ='https://localhost:3000/'\nexport default function manageUsers(state = {\n    users: [],\n    authenticated: false,\n    error: '',\n    success: '',\n    newUser: {\n        username: '',\n        password: '',\n        firstname: '',\n        lastname: '',\n        gender: '',\n        age: '',\n        profileimg: ''\n\n    }\n}, action){\n    switch (action.type) {\n        case SAVE_USER:\n            return {...state, currentUser: action.user }\n        case GET_USERS:\n            return {...state, users: action.users}\n        case ADD_USER:\n\n            return {...state, users: [...state.users, action.newUser]}\n\n        case AUTHENTICATED:\n            return {...state, error: '', authenticated: true}\n\n            case LOGIN_AUTHENTICATED:\n            return {\n                ...state, success: action.success, error: '', currentUser: action.currentUser.userInfo,  authenticated: true\n            }\n        case AUTHENTICATION_ERROR:\n            return {...state,error: action.error,authenticated: false}\n        case SUCCESS_MESSAGE:\n            return {...state, success: action.success}\n        case CLEAR_MESSAGE:\n            return {...state, error: '', success: ''}\n        case 'GET_USERS_REQUEST':\n            console.log('getting users')\n        case 'GET_USERS_SUCCESS':\n            return  {...state , users: action.users}\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}